# test code for the ibmi_at module
# (c) 2020, zhuljbj <zhuljbj@cn.ibm.com>
#
# GNU General Public License v3 or later (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt )
#
- block: 
    - copy: src="at.sh" dest="/tmp/" mode="755"

    - command: 'touch /tmp/at.txt'

    - name: TC01 schedule job with only required options
      ibmi_at: 
        job_name: 'test_at'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*ONCE"
      register: at_result

    - name: TC01 assert the returned parameters
      assert:
        that:
          - at_result.command == "QSYS/ADDJOBSCDE JOB(test_at) CMD(QSH CMD('/tmp/at.sh /tmp/at.txt')) FRQ(*ONCE) SCDDATE(*CURRENT) SCDDAY(*NONE)
             SCDTIME(*CURRENT) TEXT(*BLANK) "
          - at_result.msg is defined
          - at_result.delta is defined
          - at_result.stdout is defined
          - at_result.stderr is defined
          - at_result.rc is defined
          - at_result.stdout_lines is defined
          - at_result.stderr is defined
          - at_result.stderr_lines is defined

    - name: TC02 schedule job with all options
      ibmi_at: 
        job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*ONCE"
        scddate: '04/01/2071'
        scdday: "*NONE"
        schtime: "11:00:00"
        text: "Try ansible ibmi_at"
        parameters: ""
        joblog: true
      register: at_result

    - name: TC02 assert the returned parameters
      assert:
        that:
          - at_result.command == "QSYS/ADDJOBSCDE JOB(testall) CMD(QSH CMD('/tmp/at.sh /tmp/at.txt')) FRQ(*ONCE) SCDDATE('04/01/2071') SCDDAY(*NONE) SCDTIME('11:00:00') TEXT('Try ansible ibmi_at') " 
    - name: rmvjobsche
      ibmi_cl_command:
        cmd: 'RMVJOBSCDE JOB(TESTALL)'

    - name: TC03 schedule job with addtional parameters options
      ibmi_at: 
        job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*MONTHLY"
        scddate: '*NONE'
        scdday: "*MON"
        schtime: "11:00:00"
        text: "Try ansible ibmi_at"
        parameters: "RELDAYMON(1)"
        joblog: true
      register: at_result

    - name: TC03 assert the returned parameters
      assert:
        that:
          - at_result.command == "QSYS/ADDJOBSCDE JOB(testall) CMD(QSH CMD('/tmp/at.sh /tmp/at.txt')) FRQ(*MONTHLY) SCDDATE(*NONE) SCDDAY(*MON) SCDTIME('11:00:00') TEXT('Try ansible ibmi_at') RELDAYMON(1)"
                                  
    - name: TC03 rmvjobsche
      ibmi_cl_command:
        cmd: 'RMVJOBSCDE JOB(TESTALL)'

    # test negative test cases
    - name: TC04 schedule job with invalid job_name
      ibmi_at: 
        job_name: '01234'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*ONCE"
        scdday: "*NONE"
      register: neg_result
      failed_when: "'CPD0078' not in neg_result.stderr"

    - name: TC05 schedule job with invalid job_name
      ibmi_at: 
        job_name: 'abcdefghidk'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*ONCE"
        scdday: "*NONE"
      register: neg_result
      failed_when: "'CPD0074' not in neg_result.stderr"

    - name: TC06 schedule job with invalid cmd
      ibmi_at: 
        job_name: 'abc'
        cmd: "111"
        frequency: "*ONCE"
        scdday: "*NONE"
      register: neg_result
      failed_when: "'CPD0033' not in neg_result.stderr"

    - name: TC07 schedule job with invalid frequence
      ibmi_at: 
        job_name: 'abc'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "ABC"
        scdday: "*NONE"
      register: neg_result
      failed_when: "'value of frequency must be one of' not in neg_result.msg"

    - name: TC08 schedule job with invalid scdday
      ibmi_at: 
        job_name: 'abc'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*ONCE"
        scdday: ['abc', '*MON']
      register: neg_result
      failed_when: "'Value specified for scdday is not valid. Valid values are *NONE, *ALL, *MON, *TUE, *WED, *THU, *FRI, *SAT, *SUN' not in neg_result.msg"

    - name: TC09 submit job with conflicting options
      ibmi_at: 
        job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*WEEKLY"
        scddate: '*CURRENT'
        scdday: "*MON"
        schtime: "*CURRNET"
        joblog: true
      register: at_result
      ignore_errors: true

    - name: TC09 assert the returned parameters
      assert:
        that:
          - "'Either scddate or scdday need to be *NONE' in at_result.msg"
          - at_result.delta is defined
          - at_result.stdout is defined
          - at_result.stderr is defined
          - at_result.rc is defined
          - at_result.stdout_lines is defined
          - at_result.stderr_lines is defined

    - name: TC10 schedule job with conflicting options
      ibmi_at: 
        job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*WEEKLY"
        scdday: "*NONE"
        parameters: "abc" 
      register: neg_result
      failed_when: "'CPD0044' not in neg_result.stderr"

    - name: TC11 schedule job with unsupported option 
      ibmi_at: 
        abc: "abcd"
        job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*WEEKLY"  
        scdday: "*NONE"
      register: neg_result
      failed_when: "'Unsupported parameters' not in neg_result.msg"

    - name: TC12 schedule job without required options
      ibmi_at:
        job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        #frequency: "*WEEKLY"        
      register: neg_result
      failed_when: "'missing required arguments: frequency' not in neg_result.msg"

    - name: TC13 schedule job without required options
      ibmi_at:
        job_name: 'testall'
        #cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*WEEKLY"        
      register: neg_result
      failed_when: "'missing required arguments: cmd' not in neg_result.msg"

    - name: TC14 schedule job without required options
      ibmi_at:
        #job_name: 'testall'
        cmd: "QSH CMD('/tmp/at.sh /tmp/at.txt')"
        frequency: "*WEEKLY"        
      register: neg_result
      failed_when: "'missing required arguments: job_name' not in neg_result.msg"

  always:
    - name: delete script file
      command: "rm -rf /tmp/at.sh"

    - name: delete script file
      command: "rm -rf /tmp/at.txt"

    - name: rmvjobsche
      ibmi_cl_command:
        cmd: 'RMVJOBSCDE JOB(TESTALL)'
      ignore_errors: true

    - name: delete script local
      command: "rm -rf /tmp/testhost/tmp/at.txt"
      delegate_to: localhost

 
