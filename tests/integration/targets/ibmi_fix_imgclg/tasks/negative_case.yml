- name: install fix with invalid apply_type
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    apply_type: "abc"
  register: fix_result
  failed_when: "'value of apply_type must be one of:' not in fix_result.msg"

- name: install fix with invalid use_temp_path 
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    virtual_image_name_list: '{{ base_image_list[0] }}'
    use_temp_path: abc
    hiper_only: false
    rollback: true
  register: fix_result
  failed_when: "'is not a valid boolean' not in fix_result.msg"

- name: install fix with invalid hiper_only
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    virtual_image_name_list: '{{ base_image_list[0] }}'
    hiper_only: abc
    rollback: true
  register: fix_result
  failed_when: "'is not a valid boolean' not in fix_result.msg"

- name: install fix with invalid rollback
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    rollback: abc
  register: fix_result
  failed_when: "'is not a valid boolean' not in fix_result.msg"

- name: install fix with not exising file defined in name
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    virtual_image_name_list: 'abc'
  register: fix_result
  ignore_errors: true

- name: assert the returned parameters
  assert:
    that:
      - fix_result.need_action_ptf_list is not defined
      - "'does not exist' in fix_result.msg"

- copy:
    src: 'S0240.TXT'
    dest: '{{remote_dir}}'

- name: install fix with a txt file defined in name
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    virtual_image_name_list: 'S0240.TXT'
  register: fix_result
  failed_when: "'No image files added to image catalog ANSIBCLG1' not in fix_result.stderr"

- name: install fix with a not existing src folder
  ibmi_fix_imgclg:
    src: 'abced' 
  register: fix_result
  failed_when: "'The path specified in src does not exist' not in fix_result.msg"

- command: mkdir /tmp/abcdesfg
  ignore_errors: True

- name: install fix with existing src folder but no image files
  ibmi_fix_imgclg:
    src: '/tmp/abcdesfg' 
  register: fix_result
  failed_when: "'No image files added to image catalog ANSIBCLG1' not in fix_result.stderr"

- command: rm -rf /tmp/abcdesfg 

- name: install fix with missing required parameter
  ibmi_fix_imgclg:
  register: fix_result
  failed_when: "'missing required arguments: src' not in fix_result.msg"

- name: install fix with an unsupported parameters
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    abc: true
  register: fix_result
  failed_when: "'Unsupported parameters' not in fix_result.msg"

- name: install fix with an invalid product id
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    product_id: '5770ABC'
    apply_type: "*IMMDLY"
  register: fix_result
  failed_when: "'Product 5770ABC *ONLY not installed' not in fix_result.stderr"

- name: install fix with an valid product id but not PTFs in the image match belong to it
  ibmi_fix_imgclg:
    src: '{{ remote_dir }}' 
    product_id: '5770TC1'
    apply_type: "*IMMDLY"
  register: fix_result
  failed_when: "'No PTFs installed.' not in fix_result.stderr"

- block:
  - name: install fix with a dependent delayed ptf in the image
    ibmi_fix_imgclg:
      src: '{{ remote_dir }}' 
      virtual_image_name_list: '{{ base_image_list[1]}}'
      product_id: '*ALL'
      use_temp_path: false
      apply_type: "*IMMONLY"
      hiper_only: false
      rollback: true
    register: fix_result
    failed_when: "'CPF3632' not in fix_result.stderr"

  - ibmi_cl_command:
      cmd: "RMVPTF LICPGM(5770999) SELECT({{ptf_number}}) RMV(*PERM)"
    ignore_errors: true

  - name: install fix with an image without hiper ptf but hiper_only=true
    ibmi_fix_imgclg:
      src: '{{ remote_dir }}'
      virtual_image_name_list: '{{ base_image_list[1]}}' 
      hiper_only: true
    register: fix_result
    ignore_errors: true

  - assert:
      that:
        - "'No PTFs installed.' in fix_result.stderr"

  - name: install fix with an image without hiper ptf but hiper_only=true
    ibmi_fix_imgclg:
      src: '{{ remote_dir }}'
      virtual_image_name_list: '{{ base_image_list[1]}}' 
      hiper_only: true
      rollback: false
    register: fix_result
    ignore_errors: true

  - ibmi_cl_command:
      cmd: "RMVPTF LICPGM(5770999) SELECT({{ptf_number}}) RMV(*PERM)"
    ignore_errors: true

  - name: install fix with rollback=false
    ibmi_fix_imgclg:
      src: '{{ remote_dir }}' 
      virtual_image_name_list: '{{ base_image_list[0] }}'
      product_id: '*ALL'
      use_temp_path: false
      apply_type: "*IMMONLY"
      hiper_only: false
      rollback: true
    register: fix_result
    ignore_errors: true
    ##  Image catalog directory already associated with ...
    #failed_when: "'CPDBC01' not in fix_result.stderr"
    # Need consider whether promote message should be throw to indicate what kind of device client should clean up manually

  - ibmi_cl_command:
      cmd: "RMVPTF LICPGM(5770999) SELECT({{ptf_number}}) RMV(*PERM)"
    ignore_errors: true

  - name: install fix with because dependent PTF is in the fix_omit_list
    ibmi_fix_imgclg:
      src: '{{ remote_dir }}'
      virtual_image_name_list: '{{ base_image_list[1]}}' 
      fix_omit_list: [{'5770999': 'MF66740'}]
    register: fix_result
    failed_when: "'CPF3632' not in fix_result.stderr"
  when: "ansible_distribution_version == '7' and ansible_distribution_release == '4'"
