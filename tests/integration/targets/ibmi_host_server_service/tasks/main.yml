# test code for the ibmi_host_server_service module
# (c) 2020, zhuljbj <zhuljbj@cn.ibm.com>
#
# GNU General Public License v3 or later (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt )
#
- block: 
    - name: check whether the host server DTAQ is running
      ibmi_sql_query:
        sql: "SELECT * 
    FROM TABLE(QSYS2.ACTIVE_JOB_INFO(
                JOB_NAME_FILTER => 'QZHQSRVD',
                SUBSYSTEM_LIST_FILTER => 'QSYSWRK')) X"
      register: sql_result

    - name: end the host server if it is running
      ibmi_cl_command:
        cmd: 'ENDHOSTSVR SERVER(*DTAQ)'
      when: sql_result.row | length == 0 

    - name: TC01 start host server with all parameters
      ibmi_host_server_service:
        name_list: ['*DTAQ']
        state: 'started'
        extra_parameters: ''
        joblog: false
      register: start_result
    
    - name: TC01 assert the defined parameters are returned
      assert:
        that:
          - start_result.joblog is defined
          - start_result.start is defined
          - start_result.end is defined
          - start_result.delta is defined
          - start_result.stdout is defined
          - start_result.stderr is defined
          - "'STRHOSTSVR SERVER(*DTAQ)' in start_result.cmd"
          - start_result.rc == 0
          - start_result.rc_msg is defined
          - start_result.stdout_lines is defined
          - start_result.stderr_lines is defined

    - name: TC01 assert the host server is running
      ibmi_sql_query:
        sql: "SELECT * 
    FROM TABLE(QSYS2.ACTIVE_JOB_INFO(
                JOB_NAME_FILTER => 'QZHQSRVD',
                SUBSYSTEM_LIST_FILTER => 'QSYSWRK')) X"
        expected_row_count: 1   

    - name: TC02 start host server when the host server is running
      ibmi_host_server_service:
        name_list: ['*DTAQ']
        state: 'started'
        extra_parameters: ''
        joblog: false
      register: start_result

    - name: TC02 assert the host server is running
      ibmi_sql_query:
        sql: "SELECT * 
    FROM TABLE(QSYS2.ACTIVE_JOB_INFO(
                JOB_NAME_FILTER => 'QZHQSRVD',
                SUBSYSTEM_LIST_FILTER => 'QSYSWRK')) X"
        expected_row_count: 1  

    - name: TC03 end host server with all parameters
      ibmi_host_server_service:
        name_list: ['*DTAQ']
        state: 'stopped'
        extra_parameters: ''
        joblog: true
      register: end_result

    - name: TC03 assert the definedd parameters are returned
      assert:
        that:
          - end_result.joblog is defined
          - end_result.start is defined
          - end_result.end is defined
          - end_result.delta is defined
          - end_result.stdout is defined
          - end_result.stderr is defined
          - "'ENDHOSTSVR SERVER(*DTAQ) ' in end_result.cmd"
          - end_result.rc == 0
          - end_result.rc_msg is defined
          - end_result.stdout_lines is defined
          - end_result.stderr_lines is defined

    - name: TC03 assert the host server is not running
      ibmi_sql_query:
        sql: "SELECT * 
    FROM TABLE(QSYS2.ACTIVE_JOB_INFO(
                JOB_NAME_FILTER => 'QZHQSRVD',
                SUBSYSTEM_LIST_FILTER => 'QSYSWRK')) X"
        expected_row_count: 0

    - name: TC04 state==stopped when the host server is not running
      ibmi_host_server_service:
        name_list: ['*DTAQ']
        state: 'stopped'
        extra_parameters: ''
        joblog: true
      register: end_result

    - name: TC04 assert the host server is not running
      ibmi_sql_query:
        sql: "SELECT * 
    FROM TABLE(QSYS2.ACTIVE_JOB_INFO(
                JOB_NAME_FILTER => 'QZHQSRVD',
                SUBSYSTEM_LIST_FILTER => 'QSYSWRK')) X"
        expected_row_count: 0

    - name: TC05 start host server with extra_parameters
      ibmi_host_server_service:
        name_list: ['*ALL']
        state: 'started'
        extra_parameters: 'RQDPCL(*TCP)'
        joblog: false
      register: start_result

    - name: TC05 assert the definedd parameters are returned
      assert:
        that:
          - start_result.cmd == 'QSYS/STRHOSTSVR SERVER(*ALL) RQDPCL(*TCP)'

    - name: TC06 end host server with extra_parameters
      ibmi_host_server_service:
        name_list: ['*ALL']
        state: 'stopped'
        extra_parameters: 'ENDACTCNN(*FILE *DATABASE)'
        joblog: true
      register: end_result

    - name: TC06 assert the definedd parameters are returned
      assert:
        that:
          - end_result.cmd == 'QSYS/ENDHOSTSVR SERVER(*ALL) ENDACTCNN(*FILE *DATABASE)'

    - name: TC07 start host server with multiple host servers
      ibmi_host_server_service:
        name_list: ["*DTAQ", "*DATABASE"]
        state: 'started'
        joblog: true
      register: start_result

    - name: TC07 assert the definedd parameters are returned
      assert:
        that:
          - start_result.cmd == 'QSYS/STRHOSTSVR SERVER(*DTAQ *DATABASE)  '

    - name: TC08 end host server with multiple host servers
      ibmi_host_server_service:
        name_list: ["*DTAQ", "*DATABASE"]
        state: 'stopped'
        joblog: true
      register: end_result

    - name: TC08 assert the definedd parameters are returned
      assert:
        that:
          - end_result.cmd == 'QSYS/ENDHOSTSVR SERVER(*DTAQ *DATABASE)  '

    # Test negative path
    - name: TC09 start host server only required parameters
      ibmi_host_server_service:
        state: started
      register: neg_result
      failed_when: "'missing required argument' not in neg_result.msg"      

    - name: TC10 end host server with default values
      ibmi_host_server_service:
        state: stopped
      register: neg_result
      failed_when: "'missing required argument' not in neg_result.msg"

    - name: TC11 end host server with default values
      ibmi_host_server_service:
        name_list: ["*DTAQ", "*DATABASE"]
      register: neg_result
      failed_when: "'missing required argument' not in neg_result.msg"

    - name: TC12 host server with missing required options
      ibmi_host_server_service:
      register: neg_result
      failed_when: "'missing required argument' not in neg_result.msg"

    - name: TC13 with invalid option
      ibmi_host_server_service:
        name_list: ["*DTAQ", "*DATABASE"]
        state: 'stopped'
        abc: true
      register: neg_result
      failed_when: "'Unsupported parameters' not in neg_result.msg"

    - name: TC14 with invalid server type
      ibmi_host_server_service:
        name_list: ["abc"]
        state: 'stopped'
      register: neg_result
      failed_when: "'Value specified for name_list is not valid' not in neg_result.msg"

    - name: TC15 with invalid extra_parameters
      ibmi_host_server_service:
        name_list: ["*ALL"]
        state: 'stopped'
        extra_parameters: 'abc abc'
        joblog: true
      register: neg_result
      failed_when: "'CPD0044' not in neg_result.stderr"

    - name: TC16 with invalid joblog
      ibmi_host_server_service:
        name_list: ["*ALL"]
        state: 'stopped'
        joblog: 'abcabc'
      register: neg_result
      failed_when: "'we were unable to convert to bool' not in neg_result.msg"